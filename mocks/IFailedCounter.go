// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IFailedCounter is an autogenerated mock type for the IFailedCounter type
type IFailedCounter struct {
	mock.Mock
}

// AddFailedCount provides a mock function with given fields: accountId
func (_m *IFailedCounter) AddFailedCount(accountId string) error {
	ret := _m.Called(accountId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(accountId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetFailedCount provides a mock function with given fields: accountId
func (_m *IFailedCounter) GetFailedCount(accountId string) (int, error) {
	ret := _m.Called(accountId)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(accountId)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accountId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLock provides a mock function with given fields: accountId
func (_m *IFailedCounter) GetLock(accountId string) (bool, error) {
	ret := _m.Called(accountId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(accountId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accountId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Reset provides a mock function with given fields: accountId
func (_m *IFailedCounter) Reset(accountId string) error {
	ret := _m.Called(accountId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(accountId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
